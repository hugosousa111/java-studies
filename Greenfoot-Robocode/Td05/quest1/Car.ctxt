#BlueJ class context
comment0.target=Car
comment0.text=\r\n\ Car\ \u2013\ uma\ classe\ para\ representar\ carros.\r\n\ \r\n
comment1.params=
comment1.target=Car()
comment1.text=\r\n\ Construtor\ para\ objetos\ de\ classe\ Car\r\n
comment10.params=
comment10.target=void\ turn180()
comment11.params=direction
comment11.target=void\ setDirection(int)
comment11.text=\r\n\ Modifica\ a\ dire\u00E7\u00E3o\ a\ ser\ seguida.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Indica\ qual\ dire\u00E7\u00E3o\ o\ carro\ se\ movimenta.\r\n
comment3.params=
comment3.target=boolean\ foundTrafficLight()
comment3.text=\r\n\ Checa\ se\ h\u00E1\ um\ sem\u00E1foro\ na\ mesma\ c\u00E9lula\ em\ que\ o\ carro\ est\u00E1.\r\n
comment4.params=
comment4.target=boolean\ verifyTrafficLight()
comment4.text=\r\n\ Verifica\ o\ sem\u00E1foro\ e\ decide\ o\ que\ o\ carro\ deve\ fazer.\r\n
comment5.params=
comment5.target=void\ move()
comment5.text=\r\n\ Move\ uma\ c\u00E9lula\ \u00E0\ frente\ na\ dire\u00E7\u00E3o\ atual.\r\n
comment6.params=
comment6.target=boolean\ canMove()
comment6.text=\r\n\ Testa\ se\ pode\ mover\ adiante.\r\n\ Retorna\ true\ se\ pode\ mover,\ false\ em\ caso\ contr\u00E1rio.\r\n
comment7.params=
comment7.target=void\ turnRandom()
comment7.text=\r\n\ Toma\ uma\ dire\u00E7\u00E3o\ aleat\u00F3ria.\r\n
comment8.params=
comment8.target=void\ turnLeft()
comment8.text=\r\n\ Direciona\ pra\ esquerda.\r\n
comment9.params=
comment9.target=void\ turnRight()
numComments=12
